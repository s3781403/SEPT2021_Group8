version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-ecs: circleci/aws-ecs@1.2.0
jobs:
  test:
    working_directory: ~/repo
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip=9.0.0-r1
            pip install docker-compose==1.15.0
      - run:
          name: Run test build
          command: |
            docker-compose up -d
workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
#      - aws-ecr/build-and-push-image:
#          name: build-booksService-image
#          dockerfile: ./Dockerfile
#          path: ./BackEnd/booksmicroservices
#          repo: "bookeroo-server"
#          tag: "${CIRCLE_BRANCH}_${CIRCLE_SHA1},${CIRCLE_BRANCH}_latest-BOOKSMICROSERVICE"
#          requires:
#            - test
#          filters:
#            branches:
#              only:
#                - master
#                - develop
#      - aws-ecr/build-and-push-image:
#          name: build-loginService-image
#          dockerfile: ./Dockerfile
#          path: ./BackEnd/loginmicroservices
#          repo: "bookeroo-server"
#          tag: "${CIRCLE_BRANCH}_${CIRCLE_SHA1},${CIRCLE_BRANCH}_latest-LOGINMICROSERVICE"
#          requires:
#            - build-booksService-image
#          filters:
#            branches:
#              only:
#                - master
#                - develop
#      - aws-ecr/build-and-push-image:
#          name: build-ordersService-image
#          dockerfile: ./Dockerfile
#          path: ./BackEnd/ordersmicroservice
#          repo: "bookeroo-server"
#          tag: "${CIRCLE_BRANCH}_${CIRCLE_SHA1},${CIRCLE_BRANCH}_latest--ORDERSMICROSERVICE"
#          requires:
#            - build-loginService-image
#          filters:
#            branches:
#              only:
#                - master
#                - develop
      - aws-ecr/build-and-push-image:
          name: build-frontEndService-image
          dockerfile: ./Dockerfile
          path: ./FrontEnd/myfirstapp
          repo: "bookeroo-server"
          tag: "${CIRCLE_BRANCH}_${CIRCLE_SHA1},${CIRCLE_BRANCH}_latest--FRONTENDMICROSERVICE"
#          requires:
#            - build-ordersService-image
          filters:
            branches:
              only:
                - master
                - develop
      - aws-ecs/deploy-service-update:
          name: deploy-development
          requires:
            - build-frontEndService-image
          family: "runDockerContainers-development"
          cluster-name: "bookeroo-server-development"
          service-name: "bookeroo-server"
          container-image-name-updates: "container=bookeroo_server_development,tag=${CIRCLE_BRANCH}_${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - develop
      - approve-deploy:
          type: approval
          requires:
            - build-frontEndService-image
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          name: deploy-production
          requires:
            - approve-deploy
          family: "runDockerContainers"
          cluster-name: "BookerooServer-production"
          service-name: "bookeroo-server"
          container-image-name-updates: "container=bookeroo_server_production,tag=${CIRCLE_BRANCH}_${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - master
